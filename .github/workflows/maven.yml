name: Java CI with Maven and Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 22
        uses: actions/setup-java@v4
        with:
          java-version: '22'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Get version from pom.xml
        id: get_version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Check if release exists
        id: release_check
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_URL=$(curl -s \
            -H "Authorization: token $GITHUB_TOKEN" \
            https://api.github.com/repos/${{ github.repository }}/releases/tags/v${{ env.VERSION }} \
            | jq -r '.url')
          if [ "$RELEASE_URL" != "null" ]; then
            echo "Release already exists at $RELEASE_URL"
            echo "RELEASE_EXISTS=true" >> $GITHUB_ENV
            echo "RELEASE_URL=$RELEASE_URL" >> $GITHUB_ENV
          else
            echo "No existing release found for v${{ env.VERSION }}."
            echo "RELEASE_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Create GitHub Release
        id: create_release
        if: env.RELEASE_EXISTS == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          draft: false
          prerelease: false

      - name: Upload FVST.jar to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url || format('https://uploads.github.com/repos/{owner}/{repo}/releases/{release_id}/assets?name={name}', owner=github.repository_owner, repo=github.event.repository.name, release_id=steps.release_check.outputs.release_url) }}
          asset_path: target/FVST-${{ env.VERSION }}.jar
          asset_name: FVST-${{ env.VERSION }}.jar
          asset_content_type: application/java-archive
